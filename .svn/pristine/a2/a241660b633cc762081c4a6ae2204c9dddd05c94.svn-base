import { HistoryPage } from './../history/history';
import { MyvotesPage } from './../myvotes/myvotes';
import { UploadPage } from './../upload/upload';
import { HomePage } from './../home/home';

import { TabsPage } from './../tabs/tabs';
import { Component, ViewChild} from '@angular/core';
import { IonicPage, NavController, Nav } from 'ionic-angular';

export interface PageInterface {
  title: string;
  pageName: string;
  tabComponent?: any;
  index?: number;
  icon: string;
}

@IonicPage()
@Component({
  selector: 'page-menu',
  templateUrl: 'menu.html',
})
export class MenuPage {


	rootPage = 'TabsPage';

	  @ViewChild(Nav) nav: Nav;

	pages: PageInterface[] = [
        { title: 'Home', pageName: 'TabsPage', tabComponent: 'HomePage', index: 0, icon: 'home' },
        { title: 'Upload', pageName: 'TabsPage', tabComponent: 'UploadPage', index: 1, icon: 'contacts' },
        { title: 'My Votes', pageName: 'TabsPage', tabComponent: 'MyvotesPage', index: 2, icon: 'home' },
        { title: 'History', pageName: 'TabsPage', tabComponent: 'HistoryPage', index: 3, icon: 'contacts' },
        { title: 'Profile', pageName: 'ProfilePage', icon: 'shuffle' },
    ];
 
  constructor(public navCtrl: NavController, public navParams: Nav) {
  }

  ionViewDidLoad() {
  }

  openPage(page: PageInterface) {
    let params = {};
 
    if (page.index) {
      params = { tabIndex: page.index };
    }
 
    if (this.nav.getActiveChildNav() && page.index != undefined) {
      this.nav.getActiveChildNav().select(page.index);
    } else {
      this.nav.setRoot(page.pageName, params);
    }
  }

  isActive(page: PageInterface) {
    let childNav = this.nav.getActiveChildNav();
 
    if (childNav) {
      if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {
        return 'primary';
      }
      return;
    } 
    if (this.nav.getActive() && this.nav.getActive().name === page.pageName) {
      return 'primary';
    }
    return;
  }

}
